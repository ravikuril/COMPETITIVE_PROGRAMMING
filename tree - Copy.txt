Given a binary tree, find the leftmost value in the last row of the tree.

Example 1:

Input:

    2
   / \
  1   3

Output:
1

Example 2:

Input:

        1
       / \
      2   3
     /   / \
    4   5   6
       /
      7

Output:
7
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    int max=0;
    int result=0;
    int findBottomLeftValue(TreeNode* root) {
        call(root,1,1,result);
        if(root->right!=NULL&&root->left==NULL&&root->right->left==NULL && root->right->right==NULL)
            result=root->right->val;
        return result;
    }
    private:
    void call(TreeNode* root,int level,int pat,int &result)
    {   if(!root) return;
        if(max<level){max=level;result=root->val;}
        call(root->left,level+1,1,result);
        call(root->right,level+1,0,result);
    }
    
};


Given two integers representing the numerator and denominator of a fraction, return the fraction in string format.

If the fractional part is repeating, enclose the repeating part in parentheses.

Example :

Given numerator = 1, denominator = 2, return "0.5"
Given numerator = 2, denominator = 1, return "2"
Given numerator = 2, denominator = 3, return "0.(6)"




string Solution::fractionToDecimal(int numerator, int denominator) {
    // Do not write main() function.
    // Do not read input, instead use the arguments to the function.
    // Do not print the output, instead return values as specified
    // Still have a doubt. Checkout www.interviewbit.com/pages/sample_codes/ for more details
  string res; 
  long int numr=numerator;
  long int denr=denominator;
    map <int, int> mp;
    mp.clear();
    string result;
    if(numr%denr==0) return to_string(numr/denr);
    if(numr==0) return result+="0";
        
    string m="-";
    if(numr<0&&denr<0){numr*=-1;denr*=-1;}
    else if(numr<0||denr<0)
    {
        if(numr<0){numr*=-1;}
        if(denr<0){denr*=-1;}
        if(denr==1) return result;
        result+=m;
    }
    result+=to_string(numr/denr);
    long int rem = numr%denr;
    while ( (rem!=0) && (mp.find(rem) == mp.end()) )
    {
        mp[rem] = res.length();
       rem = rem*10;
        long int res_part = rem / denr;
        res += to_string(res_part);
        rem = rem % denr;
    }
 string d=".";
 string f="(";
 string g=")";
 if(denr==1) return result;
 result+=d;

 
    string r=res.substr(mp[rem]);
    int loc=res.find(r);
 
    string first=res.substr(0,loc);
   
    if(rem==0) {result+=res; return result;}
    else { f+=r;
            r=f;
           r+=g;
            result+=first ;
            return  result+=r;
    }
    
    
}

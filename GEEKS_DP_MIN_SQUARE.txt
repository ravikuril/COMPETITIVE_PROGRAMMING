	
Get Minimum Squares
   
 

Given a number N. You need to write a program to print the minimum number
 of squares of this number that sums to N. For Example: If N = 100 , 
N can be expressed as (10*10) and also as (5*5 + 5*5 + 5*5 + 5*5) 
but the output will be 1 as minimum number of square is 1 , i.e (10*10).

Input:
First line of input contains a single integer T, which denotes the number
 of test cases. Then T test cases follows. First line of each test case 
contains a single integer N.
Output:
For each test case print the minimum number of squares that sums to N.

Constraints:
1<=T<=100
1<=N<=104

Example:
Input:
3
100
6
25
Output:
1
3
1




#include <stdio.h>
#include <math.h> 

int main() {
	
	int t ;
	int arr[10000];
	int k;
	int x=1;
	for(k=0;k<10000;k++){arr[k]=0;}
	scanf("%d",&t);
	int i;
	for(i=0;i<t;i++)
	{
	   int n;
	   scanf("%d",&n);
	   int m=n;
	   arr[1]=1;
	   arr[2]=2;
	   arr[3]=3;
	   int i;
	   
	   if(x==1){
	  for(i=4;i<=10000;i++)
	  {     int min=n;
	        int temp=sqrt(i);
	      if(i-temp*temp==0){arr[i]=1;}
	      else
	      { int j,u;
	          for(j=1,u=i-1;j<i&&j<=u;j++,u--)
	          if(u+j==i)
	          { 
	             if(min>arr[u]+arr[j]) {min=arr[u]+arr[j];}
	             if(i%j==0)
	             {
	                 if(min>arr[j]*(i/j)){min=arr[j]*(i/j);}
	             }
	          }
	      }
	      if(arr[i]!=1)arr[i]=min;
	  }
	  int g;
	x++;
	   }
	   printf("%d\n",arr[n]);
	 
	}
	return 0;
}
Knapsack with Duplicate Items
Show Topic Tags         Google
Given weights and values related to n items and the maximum capacity allowed for these items. 
What is the maximum value we can achieve if we can pick any weights any number of times for a total
 allowed weight of W?

Input:
The first line of input contains an integer denoting the no of test cases. Then T test cases follow 
. Each test case contains two integers N and W denoting the no of items and the total allowed weight. 
In the next two lines are space separated values of the array denoting values of the items (val[]) and their weights (wt[]) respectively. 

Output:
For each test case in a new line print the  maximum value which we can achieve if
 we can pick any weights any number of times for a bag of size W.

Constraints:
1<=T<=100
1<=N, W<=1000
1<=wt[], val[]<=100

Example:
Input:
2
2 3
1 1
2 1 
4 8
1 4 5 7
1 3 4 5
Output:
3
11





#include <stdio.h>
#include<iostream>
using namespace std;
int main() {
	//code
	int t ;
	cin >>t;
	for(int i=0;i<t;i++)
	{
	    int n,w;
	    cin>>n;
	    int arr[2][n];
	    cin>>w;
	    for(int i1=0;i1<n;i1++)
	    {
	        cin>>arr[0][i1];    
	    }
	    for(int i2=0;i2<n;i2++)
	    {
	        cin>>arr[1][i2];    
	    }
	    for(int j=0;j<n;j++)
	    {
	        for(int k=j+1;k<n;k++)
	        {
	            if(arr[1][j]>=arr[1][k])
	            {
	                int temp=arr[1][j];
	                arr[1][j]=arr[1][k];
	                arr[1][k]=temp;
	                temp=arr[0][j];
	                arr[0][j]=arr[0][k];
	                arr[0][k]=temp;
	            }
	        }
	    }
	    int a[n][w+1];
	    for(int i4=0;i4<n;i4++)
	    {
	        for(int j=0;j<=w;j++)
	        {
	            a[i4][j]=0;
	        }
	        }
	    
	    for(int j=0;j<n;j++)
	    {
	        for(int i3=1;i3<=w;i3++)
	         {
	             a[j][0]=0;
	             
	             
	             if(j==0){
	                 if(arr[1][j]<=i3){a[j][i3]=a[j][i3-arr[1][j]]+arr[0][j];}}
	             if(arr[1][j]<=i3&&j>0){a[j][i3]=a[j][(i3-arr[1][j])]+arr[0][j];}
	             if(arr[1][j]>i3){a[j][i3]=a[j-1][i3];}
	         }
	    }
	    /*
	    for(int i4=0;i4<n;i4++)
	    {
	        for(int j=0;j<=w;j++)
	        {
	            cout<<a[i4][j]<<" ";
	        }
	        cout<<"\n";
	    }*/
	    int max=0;
	    for(int k=0;k<n;k++)
	    {
	        if(max<a[k][w]){max=a[k][w];}
	        
	    }
	    cout<<max<<"\n";
	    
	}
	return 0;
}
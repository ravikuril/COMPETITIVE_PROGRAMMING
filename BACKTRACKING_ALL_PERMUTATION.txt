Given a collection of numbers, return all possible permutations.

Example:

[1,2,3] will have the following permutations:

[1,2,3]
[1,3,2]
[2,1,3] 
[2,3,1] 
[3,1,2] 
[3,2,1]




vector<vector<int>>y;
void swap(int i ,int j,vector<int>&x)
{
    int temp=x[i];
    x[i]=x[j];
    x[j]=temp;
}
void fun(int i,vector<int>& A)
{  
    if(i==A.size())y.push_back(A);
    for(int j=i;j<A.size();j++)
    {
        swap(i,j,A);
        fun(i+1,A);
        swap(j,i,A);
    }
}
vector<vector<int> > Solution::permute(vector<int> &A) {
    y.clear();
fun(0,A);
return y;    
}
